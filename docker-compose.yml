volumes:
  postgres_data:
  static:
  
services:
  web:
    build: ./app
    env_file: .env
    environment:
      - DB_HOST=db
    volumes:
      - static:/app/static/
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate --database=default &&
      python manage.py collectstatic --noinput &&
      python manage.py createsuperuser --noinput || true &&
      gunicorn --bind 0.0.0.0:8000 task_tracker.wsgi"
  db:
    image: postgres:17
    restart: unless-stopped
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  nginx:
    build: ./nginx
    restart: unless-stopped
    ports:
      - "${OUT_PORT:-80}:80"
    volumes:
      - static:/usr/share/nginx/html/static/
    depends_on:
      - web
